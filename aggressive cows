bool ispossiblesol(vector<int> &stalls,int mid,int k){

    int count = 1;
    int lastpos = stalls[0];
    for(int i=0;i<stalls.size();i++){
    if((stalls[i]-lastpos)>=mid){
        count++;
        if(count==k){
            return true;
        }
        lastpos = stalls[i];
    }
    }return false;
}

int aggressiveCows(vector<int> &stalls, int k)
{
    //    Write your code here.
    sort(stalls.begin(),stalls.end());
    int min = 0;
    int maxval = -1;
    for(int i=0;i<stalls.size();i++){
        if(stalls[i]<=min){
            min= stalls[i];
        }
        if(stalls[i]>maxval){
            maxval = stalls[i];
       }
       // maxval = max(maxval,stalls[i]);
    }
    int start = min;
    int end = maxval;
    int ans=-1;
    while(start<=end){
        int mid = start + (end-start)/2;
        if(ispossiblesol(stalls,mid,k)){
            ans = mid;
            start = mid+1;
        }else{
            end = mid-1;
        }
    }return ans;
    
}
